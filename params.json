{"name":"rapi_doc","tagline":"Document Generator for Rails RESTful APIs","body":"Rails API Doc Generator\r\n=======================\r\n\r\nRESTTful API documentation generator for Rails. It supports Rails 2.1 and greater. It generates a set of HTML views in the public directory. Parses the desired controllers and generates appropriate views.\r\n\r\nCurrently does not read routes.rb and requires manual entry of routes\r\n\r\nInstallation\r\n============\r\n\r\n`gem install rapi_doc`\r\n\r\nUsage\r\n=====\r\n\r\nRun `rake rapi_doc:setup` to generate default Haml template files along with default styles.\r\nThese files are in `<application folder>/config/rapi_doc` folder. \r\n\r\nThen invoke the generation by calling:\r\n\r\n`rake rapi_doc:generate`\r\n\r\nIt will analyze `rake routes` output and find the controller files in app/controllers directory that may have the annotation.\r\nIt will confirm from the user whether he/she wants the plugin to look for annotations in each of these files.\r\nFor files confirmed by the user, it will parse the annotations and generate the HTML output using the template files and styles\r\nin the `config/rapi_doc` folder.\r\n\r\n`rake rapi_doc:clean`\r\nwill remove the documentation thus generated.\r\n\r\n`rake rapi_doc:distclean`\r\nwill remove the documentation and also the Haml template files and styles created by the `rake rapi_doc:setup`\r\n\r\n\r\nMarkup Reference\r\n================\r\n\r\nController methods and controllers themselves are documented by annotating them with \"method markers\" and\r\n\"resource markers\" enclosed in \"apidoc\" comments, similar to that in RDoc.\r\n\r\n  # =begin apidoc\r\n  ... method markers\r\n  # =end\r\n\r\nA] Method markers\r\n-----------------\r\n\r\nMethod markers are specified like this:\r\n\r\n    # <<method-marker-name>:: <method-marker-value>\r\n\r\nAll method markers are optional.\r\n\r\n    # method: HTTP request type such as GET or POST\r\n    # access: access restrictions such as FREE, RESTRICTED for paid subscribers, etc\r\n    # return: list of return data-formats like [JSON|XML] and what the return data means\r\n    # param: name and type of the parameter expected\r\n    # output: output format like JSON, XML. It is recommended that it should include an example of such data.\r\n    #         Each output marker must end with ::output-end:: on a separate line.\r\n    # request: a request generating code example\r\n    # response: a response processing code example\r\n\r\nYou can define your own custom method markers as well.\r\nThey will be available as the instance variables against which the _resource_method.html.erb template\r\nwill be evaluated.\r\n\r\nAny other information that needs to be shown in the view can be specified in the apidoc comments as well.\r\nIt will be shown under the \"Description\" section for the method in the view.\r\n\r\n\r\nB] Resource markers\r\n-------------------\r\n\r\nA resource, which is normally a controller object, can also be annotated with apidoc comments. \r\n\r\nMethod markers are specified the same way as the method markers:\r\n\r\n    # <<method-marker-name>:: <method-marker-value>\r\n    # \r\n    # xml: xml representation of the resource\r\n    # json: json representation\r\n\r\nJust like in method marker, any other information that needs to be shown in the view can be specified in the apidoc comments as well.\r\nIt will be shown under the \"Description\" section for the method in the view.\r\n\r\n\r\nC] Documentation Example\r\n---------------------\r\n\r\n    # =begin apidoc\r\n    # url:: /books\r\n    # method:: GET\r\n    # access:: FREE\r\n    # return:: [JSON|XML] - list of book objects\r\n    # param:: page:int - the page, default is 1\r\n    # param:: per_page:int - max items per page, default is 10\r\n    #\r\n    # output:: json\r\n    # [\r\n    #   { \"created_at\":\"2011-12-05T09:46:11Z\",\r\n    #     \"description\":\"As with the last several books in the series, V Is for Vengeance was a long time in the making.\",\r\n    #     \"id\":1,\r\n    #     \"price\":19,\r\n    #     \"title\":\"V is for Vengeance\",\r\n    #     \"updated_at\":\"2011-12-05T09:46:11Z\" },\r\n    # ]\r\n    # ::output-end::\r\n    #\r\n    # output:: xml\r\n    # <books type=\"array\">\r\n    #   <book>\r\n    #     <id type=\"integer\">1</id>\r\n    #     <title>V is for Vengeance</title>\r\n    #     <description>As with the last several books in the series, V Is for Vengeance was a long time in the making.</description>\r\n    #     <price type=\"integer\">19</price>\r\n    #     <created-at type=\"datetime\">2011-12-05T09:46:11Z</created-at>\r\n    #     <updated-at type=\"datetime\">2011-12-05T09:46:11Z</updated-at>\r\n    #   </book>\r\n    # </books>\r\n    #::output-end::\r\n    #\r\n    # Get a list of all books in the system with pagination.  Defaults to 10 per page\r\n    # =end\r\n\r\n\r\n\r\nHaml Templates and styles\r\n=========================\r\n\r\nResource and resource method annotations are available as instance and local variables in Haml templates.\r\nHere are the listing of variables available. But the best way to understand it is to look at the default \r\nHaml templates generated by `rake rapi_doc:setup` in `config/rapi_doc` folder.\r\n\r\n\r\nA] Resource Method\r\n------------------\r\n\r\n    @resource_name: Resource name\r\n    @method_order: the numerical order of the method\r\n    @content: All Misc info\r\n    @url: url\r\n    @access: public/privileged, etc\r\n    @return: the data format of the info\r\n    @params: params expected by this api\r\n    @outputs: array of [output_format, output example], for example, [json, ....json output.. ]\r\n    @request: example of the data expected\r\n    @response: example of the response\r\n\r\n\r\nB] Resource\r\n-----------\r\n\r\n    @name: name\r\n    @xml: xml representation of the resource\r\n    @json: json representation\r\n    @function_blocks: Array of resource method objects described above\r\n\r\n\r\n    Following instance variables are only available in the index template described below (and not in the resource Haml template)\r\n    @resource_methods: Array of HTML generated for each of the methods. \r\n    @resource_header: HTML generated for the resource\r\n\r\n\r\nC] Index\r\n--------\r\n\r\n    resource_docs: all the resource objects, whose instance variables are described above.\r\n    As mentioned before, for each resource, the HTML generated for the resource itself is available in @resource_header\r\n    and HTML generated for each of its methods is available in @resource_methods array. \r\n\r\n\r\n\r\nD] Documentaton Output\r\n----------------------\r\n\r\nDocumentation generated is located in `public/apidoc` directory.\r\n\r\n    index.html: contains the HTML \r\n    styles.css: CSS styles\r\n    scripts.js: contains the script used to search within the documentation.\r\n\r\n\r\nCredit\r\n======\r\n\r\n* Based on RAPI Doc by Jaap van der Meer found here: http://code.google.com/p/rapidoc/\r\n* https://github.com/sabman/rapi_doc\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}